---
- name: grab the github for zenoss for kube
  shell: git clone https://github.com/syspimp/openshift-zenoss4
  args:
    creates: /opt/.zenoss-configed

- name: get the namespaces available
  shell: kubectl get namespace
  register: namespaces
  args:
    creates: /opt/.zenoss-configed

- name: create the monitoring namespace if not available [TODO] MAKE INTO A VARIABLE
  shell: kubectl create namespace monitoring
  when: "'monitoring' not in namespaces.stdout"
  args:
    creates: /opt/.zenoss-configed

- name: put the template in place
  template:
    src: zenoss4-nginx-service.yaml.j2
    dest: openshift-zenoss4/objects/zenoss4-nginx-service.yaml

- name: create the zenoss volume claim objects
  shell: |
    for i in openshift-zenoss4/objects/*claim*yaml; do echo working on $i ; kubectl apply -n monitoring -f $i ; done ;
  args:
    creates: /opt/.zenoss-configed
    
- name: create the zenoss configmap objects
  shell: |
    for i in openshift-zenoss4/objects/*configmap*yaml; do echo working on $i ; kubectl apply -n monitoring -f $i ; done ;
  args:
    creates: /opt/.zenoss-configed
    
- name: create the zenoss deployment objects
  shell: |
    for i in openshift-zenoss4/objects/*deployment*yaml; do echo working on $i ; kubectl apply -n monitoring -f $i ; done ;
  args:
    creates: /opt/.zenoss-configed
    
- name: create the zenoss services objects
  shell: |
    for i in openshift-zenoss4/objects/*service*yaml; do echo working on $i ; kubectl apply -n monitoring -f $i ; done ;
  args:
    creates: /opt/.zenoss-configed

- name: Loop over kubectl get pods until zenoss nginx pod is running
  shell: kubectl get pods -n monitoring | grep zenoss4-nginx || true
  args:
    creates: /opt/.zenoss-configed
  register: kubectltasks
  retries: "120"
  delay: "2"
  until: "'Running' in kubectltasks.stdout"

- name: expose the service on port 30080
  shell: |
    kubectl port-forward service/zenoss4-nginx --address 0.0.0.0 30080:80 -n monitoring &
    disown
  args:
    creates: /opt/.zenoss-configed
    executable: /bin/bash

- name: touch a file to remain idempotent
  command: touch /opt/.zenoss-configed
  become: yes
  args:
    creates: /opt/.zenoss-configed

- name: Visit the Zenoss home page
  debug:
    msg: "Visit the Zenoss home page at http://{{ ec2_ip_address }}:30080/dmd/zport"
