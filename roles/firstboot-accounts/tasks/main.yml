---
  - name: "[selinux] mapping user_u as default selinux user"
    shell: |
      semanage login -m -s user_u  -r s0  __default__
    become: yes

  - name: "[selinux] disable user exec in home and /tmp for regular users"
    shell: |
      setsebool -P user_exec_content off
    become: yes

  - name: "[selinux] allow sysadm_u selinux user to ssh"
    shell: |
      setsebool -P ssh_sysadm_login on
    become: yes

  - name: error handling for adding automation users
    block:
    - name: "Test adding the automation user '{{ item.newusername }}' to wheel group"
      user:
        name: "{{ item.newusername }}"
        comment: "Built By Ansible Automation"
        groups: "{{ item.newgroups }}"
        seuser: sysadm_u
        expires: -1
        append: yes
      loop: "{{ newusers }}"
      when: ansible_distribution != "Ubuntu"

    - name: "Ubuntu: Add the automation user '{{ item.newusername }}' to sudo group"
      user:
        name: "{{ item.newusername }}"
        comment: "Built By Ansible Automation"
        groups: "{{ item.newgroups.replace('wheel','sudo') }}"
        seuser: sysadm_u
        expires: -1
        append: yes
      loop: "{{ newusers }}"
      when: ansible_distribution == "Ubuntu"

    rescue:
    - name: "Fallback: Add the automation user '{{ item.newusername }}' to sudo group"
      user:
        name: "{{ item.newusername }}"
        comment: "Built By Ansible Automation"
        groups: "{{ item.newgroups.replace('wheel','sudo') }}"
        seuser: sysadm_u
        expires: -1
        append: yes
      loop: "{{ newusers }}"

  - name: Set authorized key taken from file
    ansible.posix.authorized_key:
      user: "{{ item.newusername }}"
      state: present
      key: "{{ item.public_key }}"
    loop: "{{ newusers }}"

  - name: Set the sudo template
    template:
      src: "sudo-template.j2"
      dest: "/etc/sudoers.d/{{ item.newusername }}"
      owner: root
      group: root
      mode: '0400'
    loop: "{{ newusers }}"

  - name: "sssd.conf local config"
    template: 
      src: sssd.conf.j2
      dest: /etc/sssd/sssd.conf 
      owner: root 
      group: root 
      mode: 0600
    become: true
      
  - name: "session logging config"
    template: 
      src: sssd-session-recording.conf.j2
      dest: /etc/sssd/conf.d/sssd-session-recording.conf 
      owner: root 
      group: root 
      mode: 0600
    become: true

  - name: "Installing terminal logging rpms"
    yum:
      name: "{{ item }}"
      state: latest
    become: true
    loop:
      - tlog
      - aide

  - name: "terminal logging config"
    template: 
      src: tlog-rec-session.conf.j2
      dest: /etc/tlog/tlog-rec-session.conf 
      owner: root 
      group: root 
      mode: 0644
    become: true

  - name: "restarting sssd service"
    ansible.builtin.service:
      name: sssd
      state: restarted

  - name: "running aide --init to generate known good configuration"
    shell: |
      /usr/sbin/aide --init
    become: true

  - name: "running authselect to select sssd for authentication"
    shell: |
      authselect select sssd --force
      authselect enable-feature with-files-domain
      authselect apply-changes
    become: true
