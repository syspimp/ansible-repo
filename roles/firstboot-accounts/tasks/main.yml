---
  - name: error handling for adding automation users
    block:
    # RHEL and non Ubuntu distros that use wheel instead of sudo for administrators
    - name: "Test adding the automation user '{{ item.newusername }}' to wheel group"
      user:
        name: "{{ item.newusername }}"
        comment: "Built By Ansible Automation"
        groups: "{{ item.newgroups }}"
        seuser: sysadm_u
        expires: -1
        append: yes
      loop: "{{ newusers }}"
      when: ansible_distribution != "Ubuntu"

    # Ubuntu distros that use sudo instead of wheel for administrators
    - name: "Ubuntu: Add the automation user '{{ item.newusername }}' to sudo group"
      user:
        name: "{{ item.newusername }}"
        comment: "Built By Ansible Automation"
        groups: "{{ item.newgroups.replace('wheel','sudo') }}"
        seuser: sysadm_u
        expires: -1
        append: yes
      loop: "{{ newusers }}"
      when: ansible_distribution == "Ubuntu"

    rescue:
    # unknown distros that use sudo instead of wheel for administrators
    - name: "Fallback: Add the automation user '{{ item.newusername }}' to sudo group"
      user:
        name: "{{ item.newusername }}"
        comment: "Built By Ansible Automation"
        groups: "{{ item.newgroups.replace('wheel','sudo') }}"
        seuser: sysadm_u
        expires: -1
        append: yes
      loop: "{{ newusers }}"

  - name: Set authorized key taken from file
    ansible.posix.authorized_key:
      user: "{{ item.newusername }}"
      state: present
      key: "{{ item.public_key }}"
    loop: "{{ newusers }}"

  - name: Set the sudo template to allow users privileged commands
    template:
      src: "sudo-template.j2"
      dest: "/etc/sudoers.d/{{ item.newusername }}"
      owner: root
      group: root
      mode: '0400'
    loop: "{{ newusers }}"

