---
- name: "Haproxy Setup check"
  shell: |
    if [ -e "/root/.setup/haproxy-rpms" ]
    then
      echo "true"
    else
      echo "false"
    fi
  register: initialsetup
  become: true

- name: "Block to perform initial setup"
  block:
    - name: "make setup tracking dir"
      file:
        path: /root/.setup
        state: directory
        mode: 0755

    - name: "Installing haproxy rpms"
      yum:
        name: ["haproxy"]
        state: latest

    - name: "make setup tracking dir"
      file:
        path: /root/.setup/haproxy-rpms
        state: touch
        mode: 0440
  when: initialsetup.stdout == "false"

- name: "Fixing haproxy config"
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: 0600
  notify: restart haproxy

- name: "Set selinux flag to allow haproxy connections"
  shell: |
    semanage boolean --modify --on haproxy_connect_any

- name: "Enable and start haproxy"
  service:
    name: haproxy
    enabled: yes
    state: started
    
- name: "Set the load balancer ip address"
  shell: |
    zone="{{ dns_domain }}"
    hostname="lb-capsule"
    ipaddress=$(curl -s http://169.254.169.254/2019-10-01/meta-data/public-ipv4)
    extravars="{\\\"fqdn\\\":\\\"${hostname}.${zone}\\\",\\\"zone\\\":\\\"${zone}\\\",\\\"public_ip\\\":\\\"${ipaddress}\\\"}"
    curl -s -f -k -H 'Content-Type: application/json' -XPOST -d "{\"extra_vars\":\"${extravars}\"}" --user admin:{{ ipmi_pass }} https://{{ default_tower_server }}:443/api/v2/job_templates/30/launch/
  args:
    executable: /bin/bash
