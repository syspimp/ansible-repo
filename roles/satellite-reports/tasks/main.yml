---
- name: "include tower stuff to populate sat6_server variable, or set it yourself somewhere"
  include: tower.yml

- name: "lets use python data analysis to speed things up"
  block:
    - name: "check is python data analysis is installed on localhost (or tower)"
      shell: which pip && pip list --user
      register: piplist

    - name: "install if not found"
      shell: pip install --user pandas
      when: "'pandas' not in piplist.stdout"
  rescue:
    # since I'm using Tower, nothing requiring root is used
    #- name: "install pip"
    #  shell: yum -y install python2-pip
    #  #ignore_errors: yes
    - name: "install pandas"
      shell: pip install --user pandas
      #ignore_errors: yes
  always:
    - name: "place pandas report python script on localhost( or tower)"
      template:
        src: "generate_report.py.j2"
        # /tmp so no special permissions required
        dest: "/tmp/generate_report.py"

    - name: "run first report on the sat6 server and save output"
      shell: "hammer report-template generate --id 125 > /tmp/reporttemplate.csv"
      delegate_to: "{{ sat6_server }}"

    - name: "run second report on the sat6 server and save output"
      shell: "hammer --csv config-report list > /tmp/configreport.csv"
      delegate_to: "{{ sat6_server }}"

    - name: "run entitlment report on the sat6 server and save output"
      shell: |
        hammer report-template generate --id 130 --inputs '{"Days from Now":"no limit"}' > /tmp/entitlements.csv
        #fix the header for this one so it matches the other reports
        sed -i -e 's/^Host Name,Organization/Host,Organization/g' /tmp/entitlements.csv
      delegate_to: "{{ sat6_server }}"

    - name: "copy csv files from satellite to localhost (or tower)"
      fetch:
        src: /tmp/configreport.csv
        dest: /tmp/
        flat: yes
      delegate_to: "{{ sat6_server }}"

    - name: "copy csv files from satellite to localhost (or tower)"
      fetch:
        src: /tmp/reporttemplate.csv
        dest: /tmp/
        flat: yes
      delegate_to: "{{ sat6_server }}"

    - name: "copy csv files from satellite to localhost (or tower)"
      fetch:
        src: /tmp/entitlements.csv
        dest: /tmp/
        flat: yes
      delegate_to: "{{ sat6_server }}"

    - name: "generate final report using pandas in /tmp"
      shell: "python /tmp/generate_report.py"

    - name: "hang around for awhile while I grab the reports because tower removes /tmp files from itself after a run"
      pause:
        minutes: 5
      
#- name: "create new list variable to hold the results"
#  set_fact:
#    final_result: []
#
#- name: "run first report on the sat6 server and save output"
#  shell: "hammer report-template generate --id 125"
#  register: reporttemplate
#  delegate_to: "{{ sat6_server }}"
#
#- name: "run second report on the sat6 server and save output"
#  shell: "hammer --csv config-report list"
#  register: configreports
#  delegate_to: "{{ sat6_server }}"
#
#- name: "create new variable to hold the csv header"
#  set_fact:
#    final_header: "{{ reporttemplate.stdout.split('\n')[0] }}, {{ configreports.stdout.split('\n')[0] }}"
#
#- name: "loop over reporttemplate and add output of confighosts, matching on key of hostname"
#  include: merge_reports.yml
#  loop: "{{ reporttemplate.stdout.split('\n') }}"
#  loop_control:
#    index_var: report_row_num
#    loop_var: report_contents
#
#- name: "generate today's date"
#  set_fact:
#    date: "{{ lookup('pipe', 'date +\"%Y%m%d\"') }}"
#
#- name: "generate the csv file in /tmp"
#  template:
#    src: "sat6-report.csv.j2"
#    dest: "/tmp/sat6-report-{{ date }}.csv"
