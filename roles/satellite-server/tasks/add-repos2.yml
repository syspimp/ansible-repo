#- name: debug
#  debug:
#    var: "{{ pproducts.repoids }}"

- name: "Enable {{ pproducts.name }} repositories"
  ignore_errors: yes
  redhat.satellite.repository_set:
    username: "{{ sat6_user }}"
    password: "{{ sat6_pass }}"
    server_url: "{{ sat6_url }}"
    validate_certs: no
    name: "{{ item.name }}"
    product: "{{ pproducts.name }}"
    repositories:
      - releasever: "{{ item.releasever|default('',True) }}"
        basearch: "{{ item.basearch|default('',True) }}"
    organization: "{{ sat6.default_org }}"
    state: enabled
  loop: "{{ pproducts.repoids }}"

- name: "Sync {{ pproducts.name }} repositories"
  ignore_errors: yes
  redhat.satellite.repository_sync:
    username: "{{ sat6_user }}"
    password: "{{ sat6_pass }}"
    server_url: "{{ sat6_url }}"
    validate_certs: no
    repository: "{{ item.name }}"
    product: "{{ pproducts.name }}"
    organization: "{{ sat6.default_org }}"
  loop: "{{ pproducts.repoids }}"

- name: "set fact for content view"
  ignore_errors: yes
  vars:
    name: "{{ item.name }}"
    product: "{{ pproducts.name }}"
  set_fact:
    contentviewpush: "{{ contentviewpush | combine({'name': name,'product': product}) }}"
  loop: "{{ pproducts.repoids }}"

- name: "Create RHEL ContentView"
  ignore_errors: yes
  redhat.satellite.content_view:
    username: "{{ sat6_user }}"
    password: "{{ sat6_pass }}"
    server_url: "{{ sat6_url }}"
    validate_certs: no
    name: "{{ sat6.content_view }}"
    repositories:
      - name: "{{ item.name }}"
        product: "{{ item.product }}"
    organization: "{{ sat6.default_org }}"
    state: present
  loop: "{{ contentviewpush }}"
