#!/bin/bash
zone="{{ dns_domain }}"
hostname="$(hostname --short)"
{% if ( 'EC2' not in ansible_system_vendor ) and ( 'Xen' not in ansible_system_vendor ) %}
key="{{ dhcp_server_key }}"
server="{{ dhcp_server }}"
reverse=$(echo {{ ansible_default_ipv4['address'] }} | awk -F. '{print $4"."$3"." $2"."$1}')
reversezone=$(echo {{ ansible_default_ipv4['address'] }} | awk -F. '{print $3"." $2"."$1}')
temp=/tmp.$$
touch $temp
cat > ${temp} <<EOF
server ${server}
key dhcpupdate ${key}
zone ${reversezone}.in-addr.arp
update delete ${reverse}.in-addr.arpa. PTR
update add ${reverse}.in-addr.arpa. 300 IN PTR ${hostname}.${zone}.
send
zone ${zone}
update delete ${hostname}.${zone}. A
update add ${hostname}.${zone}. 300 IN A {{ ansible_default_ipv4['address'] }}
send
EOF
nsupdate -v ${temp}
echo "$*" >> /tmp/dnsmasq.updater.txt
rm -f ${temp}
{% else %}
#ipaddress=$(curl -s http://169.254.169.254/2019-10-01/meta-data/local-ipv4)
ipaddress=$(curl -s http://169.254.169.254/2019-10-01/meta-data/public-ipv4)
extravars="{\\\"fqdn\\\":\\\"${hostname}.${zone}\\\",\\\"zone\\\":\\\"${zone}\\\",\\\"public_ip\\\":\\\"${ipaddress}\\\"}"
curl -s -f -k -H 'Content-Type: application/json' -XPOST -d "{\"extra_vars\":\"${extravars}\"}" --user {{ ansible_uri_creds }} https://{{ default_tower_server }}:443/api/v2/job_templates/30/launch/
{% endif %}
