---
- name: "Check if clevis is installed"
  shell: "rpm -qa | grep clevis-luks || true"
  args:
    executable: /bin/bash
  register: isclevisinstalled

- name: "Install clevis client to decrypt encrypted block devices"
  yum:
    name: "{{ item }}"
    state: "present"
  when: "'clevis' not in isclevisinstalled.stdout"
  loop:
    - clevis-luks
    - clevis-dracut
    - clevis

- name: partitioning block
  block:
  - name: make sure the disk is present
    shell: lsblk | grep {{ encrypted['device'] }}
  rescue:
  - name: Fail hard
    fail:
      msg: "The requested disk {{ encrypted['device'] }} is not present"

- name: partitioning block
  block:
  - name: check the disk
    shell: |
      parted -l | grep {{ encrypted['device'] }} 
      touch /root/.setup/encrypt1
    register: command_result
    #failed_when: "'unrecognised disk label' not in command_result.stderr"
    args:
      creates: /root/.setup/encrypt1

  - name: create the partition
    shell: parted /dev/{{ encrypted['device'] }}  mklabel msdos mkpart primary {{ encrypted['device_fs'] }} 1M {{ encrypted['device_size'] }}G && touch /root/.setup/encrypt2
    args:
      creates: /root/.setup/encrypt2
  rescue:
  - name: Fail hard
    fail:
      msg:  "Partition is already labeled or partition already exists."

- name: encryption block
  block:
  - name: encrypt the partion
    shell: echo -n '{{ encrypted['passphrase'] }}' | cryptsetup luksFormat /dev/{{ encrypted['device'] }}p1 --batch-mode -
    args:
      creates: /root/.setup/encrypt3

  - name: name the encrypted partition
    shell: echo -n '{{ encrypted['passphrase'] }}' | cryptsetup luksOpen /dev/{{ encrypted['device'] }}p1 {{ encrypted['device_name'] }} --batch-mode - && touch /root/.setup/encrypt3
    args:
      creates: /root/.setup/encrypt3
  rescue:
  - name: Fail hard
    fail:
      msg:  "Partition is already labeled or partition already exists."

- name: format block
  block:
  - name: format the partion
    shell: mkfs.{{ encrypted['device_fs'] }} /dev/mapper/{{ encrypted['device_name'] }} && touch /root/.setup/encrypt4
    args:
      creates: /root/.setup/encrypt4

  - name: "make mount point dir"
    file:
      path: "{{ encrypted['device_mountpoint'] }}"
      state: directory
      mode: 0755
  
  - name: test mounting the formatted, encrypted partition
    shell: mount -t {{ encrypted['device_fs'] }} /dev/mapper/{{ encrypted['device_name'] }} {{ encrypted['device_mountpoint'] }} && touch /root/.setup/encrypt5
    args:
      creates: /root/.setup/encrypt5

  - name: "Configure /etc/crypttab"
    lineinfile:
      path: /etc/crypttab
      line: "{{ encrypted['device_name'] }}  /dev/{{ encrypted['device'] }}p1  none   _netdev"
  
  - name: "Configure /etc/fstab"
    lineinfile:
      path: /etc/fstab
      line: "/dev/mapper/{{ encrypted['device_name'] }}  {{ encrypted['device_mountpoint'] }}  {{ encrypted['device_fs'] }}   _netdev   1 2"
  rescue:
  - name: Fail hard
    fail:
      msg:  "Could not make or mount filesystem"

- name: "Set the clevis config template file"
  template:
    src: clevis-config.sh.j2
    dest: /tmp/clevis-config.sh
    mode: 0755

- name: "Enable and start clevis-luks-askpath"
  service:
    name: clevis-luks-askpass.path
    enabled: yes
    state: started

- name: "Configure clevis to talk to tang servers"
  shell: |
    source /tmp/clevis-config.sh
    echo -n '{{ encrypted['passphrase'] }}' | clevis luks bind -f -k- -d /dev/{{ encrypted['device'] }}p1 sss "$cfg" && \
    touch /root/.setup/encryptedsetup
  register: output
  args:
    executable: /bin/bash
    creates: /root/.setup/encryptedsetup

- name:  "output of last command"
  debug:
    var: output
